{"version":3,"sources":["redux/notes/selectors.js","redux/notes/constants.js","redux/notes/actions.js","redux/modal/constants.js","redux/modal/actions.js","components/Note/Note.jsx","components/Notes/Notes.jsx","redux/modal/selectors.js","components/Modals/modalCreate/ModalCreate.jsx","components/Modals/modalEdit/ModalEdit.jsx","components/Modals/Modals.jsx","App.js","reportWebVitals.js","redux/notes/reducer.js","redux/modal/reducer.js","redux/index.js","index.js"],"names":["listSelector","createSelector","state","notes","similarData","Data","name","context","data","lst","filter","i","compare","list","Set","text","elementName","searchName","nameLst","split","searchLst","length","j","UPDATE_DATA","updateData","type","payload","closeCreator","CONSTANTS","closeEditor","Note","note","useState","details","setDetailVisible","id","dateCreated","dispatch","useDispatch","useSelector","selectorsimilardData","slice","className","onClick","src","alt","openEditor","element","map","Notes","searchValue","setValue","filteredData","console","log","onSubmit","e","preventDefault","searchData","target","searchInput","value","status","error","renderNotes","modalCreatorSelector","modal","creator","isOpen","isOpenEditorSelector","editor","noteIdEditorSelector","noteId","modalEditorSelector","createStructuredSelector","ModalCreate","datenow","Date","nextId","toLocaleDateString","push","ModalEdit","title","forEach","Modals","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d14781d.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nexport const listSelector = createSelector(\r\n  (state) => state.notes,\r\n  (notes) => notes\r\n);\r\nexport const selectorFiltredData = (text) => {\r\n  return createSelector(\r\n    (state) => state.notes,\r\n    (notes) => filter(notes, text)\r\n  );\r\n};\r\nexport const selectorsimilardData = (text, context) => {\r\n  return createSelector(\r\n    (state) => state.notes,\r\n    (notes) => similarData(notes, text, context)\r\n  );\r\n};\r\nconst similarData = (Data, name, context) => {\r\n  const { data } = Data;\r\n  const lst = data.filter((i) => compare(i.name, name));\r\n  const list = data.filter((i) => compare(i.context, context));\r\n  const array = [...new Set([...list, ...lst])];\r\n  return array;\r\n};\r\nconst filter = (Data, text) => {\r\n  const { data } = Data;\r\n  if (text == \"\" || text == \" \") {\r\n    return data;\r\n  }\r\n  const lst = data.filter((i) => compare(i.name, text));\r\n  return lst;\r\n};\r\nconst compare = (elementName, searchName) => {\r\n  const nameLst = elementName.split(\" \");\r\n  const searchLst = searchName.split(\" \");\r\n  for (let i = 0; i < nameLst.length; i++) {\r\n    for (let j = 0; j < searchLst.length; j++) {\r\n      if (nameLst[i] === searchLst[j]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n};\r\n","export const UPDATE_DATA = '/notes/update/data';","import { UPDATE_DATA } from './constants';\r\nexport const updateData = (data) => ({\r\n  type: UPDATE_DATA,\r\n  payload: data\r\n});\r\n","export default {\r\n  CLOSE_CREATOR: '/modal/close/creator',\r\n  OPEN_CREATOR: '/modal/open/creator',\r\n  CLOSE_EDITOR: '/modal/close/editor',\r\n  OPEN_EDITOR: '/modal/open/editor'\r\n};\r\n","import CONSTANTS from './constants';\r\n\r\nexport const closeCreator = () => ({\r\n  type: CONSTANTS.CLOSE_CREATOR\r\n});\r\n\r\nexport const openCreator = () => ({\r\n  type: CONSTANTS.OPEN_CREATOR\r\n});\r\n\r\nexport const closeEditor = () => ({\r\n  type: CONSTANTS.CLOSE_EDITOR\r\n});\r\n\r\nexport const openEditor = (id) => ({\r\n  type: CONSTANTS.OPEN_EDITOR,\r\n  payload: id\r\n});\r\n","import React,{useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {listSelector} from '../../redux/notes/selectors';\r\nimport { updateData } from '../../redux/notes/actions';\r\nimport { openEditor } from '../../redux/modal/actions';\r\nimport {selectorsimilardData} from '../../redux/notes/selectors';\r\nimport './Note.css';\r\n\r\nconst Note = ({ note }) => {\r\n  const [details,setDetailVisible]=useState(false);\r\n  const { id, name, context, dateCreated } = note;\r\n  const dispatch = useDispatch();\r\n  const { data } = useSelector(listSelector);\r\n  const similarData=useSelector(selectorsimilardData(name,context)).slice(0,3);\r\n  const deleteNote = () => {\r\n    const list = data.filter((element) => element.id !== id);\r\n    dispatch(updateData(list));\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-note\">\r\n    <div className=\"todo-note-wrapper\">\r\n      <ul className={'header-line note-line '}>\r\n        <li className=\"note-name\">{name} </li>\r\n        <li>{dateCreated}</li>\r\n      </ul>\r\n\r\n      <ul className=\"header-line-buttons\">\r\n        <li>\r\n          <button\r\n          onClick={()=>{setDetailVisible(!details)}}\r\n          className={'organise-but'}>\r\n              <img\r\n              className=\"image-wrapper\"\r\n              src={details?'./media/images/up.png':'./media/images/down.png'}\r\n              alt=\"\"\r\n            />\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button\r\n            onClick={() => dispatch(openEditor(id))}\r\n            className={'organise-but'}\r\n          >\r\n            <img\r\n              className=\"image-wrapper\"\r\n              id=\"change-data\"\r\n              src={'./media/images/Pen.png'}\r\n              alt=\"\"\r\n            />\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button onClick={deleteNote} className=\"organise-but\">\r\n            <img\r\n              className=\"image-wrapper\"\r\n              src=\"./media/images/garbageBlack.png\"\r\n              alt=\"\"\r\n            />\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      \r\n    </div>\r\n    <div className={details?'note-details':'note-details-hidden'}>\r\n      <p>{context}</p>\r\n      <div className={'top-notes'}>\r\n        {similarData.map(i=>{return <div className={'similar-note'}>\r\n          <p className=\"header-similar\">{i.name}</p>\r\n          <p className=\"context-similare\">{i.context}</p>\r\n          <p className=\"data-similar\">{i.dateCreated}</p>\r\n          </div>})}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Note;\r\n","import Note from \"../Note/Note\";\r\nimport \"./Notes.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectorFiltredData } from \"../../redux/notes/selectors\";\r\nimport { openCreator } from \"../../redux/modal/actions\";\r\n\r\nconst Notes = () => {\r\n  const [searchValue,setValue]=useState('')\r\n  let filteredData = useSelector(selectorFiltredData(searchValue));\r\n  console.log(filteredData);\r\n  const dispatch = useDispatch();\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n    const searchData = e.target.searchInput.value;\r\n     setValue(searchData);\r\n  };\r\n  const renderNotes = (status) => {\r\n    try {\r\n        return filteredData.map((note) => <Note key={note.id} note={note} />);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  \r\n  };\r\n  return (\r\n    <>\r\n      <div className={\"todo-wrapper\"}>\r\n        <div className={\"todo-list-wrapper\"}>\r\n          <div>\r\n            <form onSubmit={search}>\r\n              <input type={\"text\"} name={\"searchInput\"}></input>{\" \"}\r\n              <input type=\"submit\" value=\"Sent\"></input>\r\n            </form>\r\n          </div>\r\n          <div className={\"todo-list\"}>{renderNotes(false)}</div>\r\n          <div className={\"button-create-wraper\"}>\r\n            <button\r\n              id=\"todo-button-create\"\r\n              onClick={() => dispatch(openCreator())}\r\n            >\r\n              Add new announcement\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import { createSelector, createStructuredSelector } from 'reselect';\r\n\r\nexport const modalCreatorSelector = createSelector(\r\n  (state) => state.modal,\r\n  ({ creator }) => creator.isOpen\r\n);\r\n\r\nconst isOpenEditorSelector = createSelector(\r\n  (state) => state.modal,\r\n  ({ editor }) => editor.isOpen\r\n);\r\n\r\nconst noteIdEditorSelector = createSelector(\r\n  (state) => state.modal,\r\n  ({ editor }) => editor.noteId\r\n);\r\n\r\nexport const modalEditorSelector = createStructuredSelector({\r\n  isOpen: isOpenEditorSelector,\r\n  noteId: noteIdEditorSelector\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './ModalCreate.css';\r\nimport nextId from 'react-id-generator';\r\nimport {listSelector} from '../../../redux/notes/selectors';\r\nimport { updateData } from '../../../redux/notes/actions';\r\nimport { closeCreator } from '../../../redux/modal/actions';\r\nimport { modalCreatorSelector } from '../../../redux/modal/selectors';\r\n\r\nconst ModalCreate = () => {\r\n  const dispatch = useDispatch();\r\n  const { data } = useSelector(listSelector);\r\n  const active = useSelector(modalCreatorSelector);\r\n  const submitData = (e) => {\r\n    e.preventDefault();\r\n    const datenow = new Date();\r\n    const note = {\r\n      id: nextId(),\r\n      name: e.target.name.value,\r\n      context:e.target.context.value,\r\n      dateCreated: datenow.toLocaleDateString()\r\n    };\r\n\r\n    data.push(note);\r\n    dispatch(updateData(data));\r\n    dispatch(closeCreator);\r\n  };\r\n  if (active === false) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className={'modal'}>\r\n          <div className={'modal-content'}>\r\n            <form onSubmit={submitData}>\r\n              <p className={'title-create'}>Input new Data</p>\r\n              <div className={'form-cont'}>\r\n                <p>Title</p>\r\n                <input name={'name'} type={'text'}></input>\r\n              </div>\r\n              <div className={'form-cont form-textarea'}>\r\n                <p>Context</p>\r\n                <input name={'context'} type={'textarea'}></input>\r\n              </div>\r\n              <input\r\n                id={'form-submit-button'}\r\n                type=\"submit\"\r\n                value=\"Sent\"\r\n              ></input>\r\n            </form>\r\n\r\n            <span onClick={() => dispatch(closeCreator())} className={'close'}>\r\n              &times;\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ModalCreate;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { modalEditorSelector } from \"../../../redux/modal/selectors\";\r\nimport { listSelector } from \"../../../redux/notes/selectors\";\r\nimport { updateData } from \"../../../redux/notes/actions\";\r\nimport { closeEditor } from \"../../../redux/modal/actions\";\r\n\r\nconst ModalEdit = () => {\r\n  const dispatch = useDispatch();\r\n  const { noteId, isOpen } = useSelector(modalEditorSelector);\r\n  const { data } = useSelector(listSelector);\r\n\r\n  const changeDate = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.name.value === \"\") {\r\n    } else {\r\n      const title = e.target.name.value;\r\n      const context = e.target.context.value;\r\n      data.forEach((note) => {\r\n        if (note.id === noteId) {\r\n          note.name = title;\r\n          note.context = context;\r\n        }\r\n      });\r\n    }\r\n    dispatch(updateData(data));\r\n    dispatch(closeEditor());\r\n  };\r\n  if (!isOpen) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div id=\"Change_modal\" className={\"modal\"}>\r\n        <div className={\"modal-content\"}>\r\n          <form onSubmit={changeDate}>\r\n            <p className={\"title-create\"}>Change your data</p>\r\n            <div className={\"form-cont\"}>\r\n              <p>Title</p>\r\n              <input name={\"name\"} type={\"text\"}></input>\r\n            </div>\r\n            <div className={\"form-cont form-textarea\"}>\r\n              <p>Context</p>\r\n              <input name={\"context\"} type={\"textarea\"}></input>\r\n            </div>\r\n            <input id={\"form-submit-button\"} type=\"submit\" value=\"Sent\"></input>\r\n          </form>\r\n          <span\r\n            onClick={() => dispatch(closeEditor())}\r\n            id=\"closeChangeMenu\"\r\n            className={\"close\"}\r\n          >\r\n            &times;\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ModalEdit;\r\n","import React from 'react';\r\nimport ModalCreate from './modalCreate/ModalCreate';\r\nimport ModalEdit from './modalEdit/ModalEdit';\r\n\r\nconst Modals = () => {\r\n  return (\r\n    <>\r\n      <ModalEdit></ModalEdit>\r\n      <ModalCreate></ModalCreate>\r\n    </>\r\n  );\r\n};\r\nexport default Modals;\r\n","import './App.css';\nimport Notes from './components/Notes/Notes';\nimport Modal from './components/Modals/Modals';\nfunction App() {\n  return (\n    <>\n      <Modal />\n      <Notes />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UPDATE_DATA } from \"./constants\";\r\nconst initialState = {\r\n  data: [\r\n    {\r\n      id: 1,\r\n      name: \"Honda Jazz 2012 автомат\",\r\n      dateCreated: \"19.02.2021\",\r\n      context:\r\n        \"Honda Jazz III 2012 року випуску, мотор бензин 1.4 на автоматичній коробці (варіатор) \",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Ford Mondeo 2009\",\r\n      dateCreated: \"19.02.2021\",\r\n      context: \"Гарна комплектація, хороший стан.Деталі по телефону\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Skoda Octavia A5\",\r\n      dateCreated: \"19.02.2021\",\r\n      context:\r\n        \"Skoda Octavia A5, 2007 р, м. Львов. Перший власник із салону , машина не бита . Все працює . Пробіг : 244 тис.\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Skoda Superb 2010 року\",\r\n      dateCreated: \"19.02.2021\",\r\n      context:\r\n        \"Продається Skoda Superb 2010 року .Є не величкі недоліки по кузову .Всімпитання по телефону \",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Suzuki Grand Vitara 2008 р\",\r\n      dateCreated: \"19.02.2021\",\r\n      context:\r\n        \"Автомобіль, який зарекомендував себе з позитивної точки зору. Це транспорт, який не підведе вас у дорозі із ними себе будете почувати добре на бездоріжжі. Автомобіль має шкіряний салон досить збережений. Повний привід. Підігрів сидіння, безключовий доступ, люк, хороший мотор і збережена ходова. Кузов теж досить хорошому стані\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_DATA:\r\n      return {\r\n        data: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import CONSTANTS from './constants';\r\n\r\nconst initialState = {\r\n  creator: {\r\n    isOpen: false\r\n  },\r\n  editor: {\r\n    isOpen: false,\r\n    noteId: 0\r\n  }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.CLOSE_CREATOR:\r\n      return {\r\n        ...state,\r\n        creator: { isOpen: false }\r\n      };\r\n    case CONSTANTS.OPEN_CREATOR:\r\n      return {\r\n        ...state,\r\n        creator: { isOpen: true }\r\n      };\r\n    case CONSTANTS.CLOSE_EDITOR:\r\n      return {\r\n        ...state,\r\n        editor: { noteId: null, isOpen: false }\r\n      };\r\n    case CONSTANTS.OPEN_EDITOR:\r\n      return {\r\n        ...state,\r\n        editor: { noteId: action.payload, isOpen: true }\r\n      };\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport notes from './notes/reducer';\r\nimport modal from './modal/reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  notes,\r\n  modal,\r\n  \r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './redux/index';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode></Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}